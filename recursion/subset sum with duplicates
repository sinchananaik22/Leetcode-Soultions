class Solution:
    def subsetsWithDup(self, nums: list[int]) -> list[list[int]]:
        nums.sort()  # Sort to handle duplicates
        result = []

        def backtrack(index, path):
            result.append(path[:])  # Add current subset
            for i in range(index, len(nums)):
                # Skip duplicates
                if i > index and nums[i] == nums[i-1]:
                    continue
                path.append(nums[i])
                backtrack(i + 1, path)
                path.pop()  # Backtrack

        backtrack(0, [])
        return result

# Example usage
nums = [1,2,2]
print(Solution().subsetsWithDup(nums))
# Output: [[], [1], [1,2], [1,2,2], [2], [2,2]]

nums = [0]
print(Solution().subsetsWithDup(nums))
# Output: [[], [0]]
