class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        n = len(nums)
        
        # DP arrays
        dp_max = [0] * n
        dp_min = [0] * n
        
        # Base case
        dp_max[0] = dp_min[0] = nums[0]
        result = nums[0]
        
        # Fill dp arrays
        for i in range(1, n):
            dp_max[i] = max(nums[i], nums[i] * dp_max[i-1], nums[i] * dp_min[i-1])
            dp_min[i] = min(nums[i], nums[i] * dp_max[i-1], nums[i] * dp_min[i-1])
            
            result = max(result, dp_max[i])
        
        return result
