class Solution:
    def knapSack(self, W, wt, val, n):
        # DP table
        dp = [[0] * (W + 1) for _ in range(n + 1)]
        
        # Build table
        for i in range(1, n + 1):
            for w in range(1, W + 1):
                if wt[i-1] <= w:
                    dp[i][w] = max(val[i-1] + dp[i-1][w - wt[i-1]], 
                                   dp[i-1][w])
                else:
                    dp[i][w] = dp[i-1][w]
        
        return dp[n][W]



Example
val = [60, 100, 120]
wt = [10, 20, 30]
W = 50


Pick item 2 (100, wt=20) + item 3 (120, wt=30)

Total = 220

Time = O(n*W)
ðŸ’¾ Space = O(W)
