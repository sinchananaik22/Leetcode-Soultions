class QueueUsingStacks:
    def __init__(self):
        self.stack1 = []  # For enqueue
        self.stack2 = []  # For dequeue

    # Enqueue operation
    def enqueue(self, x):
        self.stack1.append(x)

    # Dequeue operation
    def dequeue(self):
        if self.isEmpty():
            return None
        # If stack2 is empty, pour elements from stack1
        if not self.stack2:
            while self.stack1:
                self.stack2.append(self.stack1.pop())
        return self.stack2.pop()

    # Peek at front element without removing
    def front(self):
        if self.isEmpty():
            return None
        if not self.stack2:
            while self.stack1:
                self.stack2.append(self.stack1.pop())
        return self.stack2[-1]

    # Check if queue is empty
    def isEmpty(self):
        return not self.stack1 and not self.stack2
