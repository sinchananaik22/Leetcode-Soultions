# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        prev = None
        curr = head
        
        while curr:
            next_node = curr.next  # save next
            curr.next = prev       # reverse pointer
            prev = curr            # move prev forward
            curr = next_node       # move curr forward
        
        return prev



Example Walkthrough

Input: [1,2,3,4,5]

Step 1: 1 → None

Step 2: 2 → 1 → None

Step 3: 3 → 2 → 1 → None …

Result: [5,4,3,2,1] ✅


Time: O(n)

Space: O(1) iterative, O(n) recursive (stack)
