# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        dummy = ListNode(0)
        current = dummy
        carry = 0
        
        while l1 or l2 or carry:
            val1 = l1.val if l1 else 0
            val2 = l2.val if l2 else 0
            
            total = val1 + val2 + carry
            carry = total // 10
            current.next = ListNode(total % 10)
            
            current = current.next
            if l1: l1 = l1.next
            if l2: l2 = l2.next
        
        return dummy.next




Example Walkthrough

Input: l1 = [2,4,3], l2 = [5,6,4]

Step 1: 2+5=7 → node 7, carry 0

Step 2: 4+6=10 → node 0, carry 1

Step 3: 3+4+1=8 → node 8, carry 0

Output: [7,0,8] → represents 807

⚡ Complexity

Time: O(max(m,n)), where m and n are lengths of the lists

Space: O(max(m,n)) for the new list
