from typing import List

class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        rows, cols = len(matrix), len(matrix[0])
        
        first_row_has_zero = any(matrix[0][j] == 0 for j in range(cols))
        first_col_has_zero = any(matrix[i][0] == 0 for i in range(rows))
        
        # Step 1: Mark zeros in first row and column
        for i in range(1, rows):
            for j in range(1, cols):
                if matrix[i][j] == 0:
                    matrix[i][0] = 0
                    matrix[0][j] = 0
        
        # Step 2: Set cells to zero using marks
        for i in range(1, rows):
            for j in range(1, cols):
                if matrix[i][0] == 0 or matrix[0][j] == 0:
                    matrix[i][j] = 0
        
        # Step 3: Handle first row
        if first_row_has_zero:
            for j in range(cols):
                matrix[0][j] = 0
        
        # Step 4: Handle first column
        if first_col_has_zero:
            for i in range(rows):
                matrix[i][0] = 0






xample Walkthrough

Input:

matrix = [[1,1,1],
          [1,0,1],
          [1,1,1]]


First row → no zero

First col → no zero

(1,1) = 0 → mark matrix[1][0] = 0, matrix[0][1] = 0

Now matrix:

[[1,0,1],
 [0,0,1],
 [1,1,1]]


Process inner part → set row/col based on marks

Final:

[[1,0,1],
 [0,0,0],
 [1,0,1]]


✅ Matches output.
