class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        if not matrix or not matrix[0]:
            return False
        
        m, n = len(matrix), len(matrix[0])
        left, right = 0, m * n - 1
        
        while left <= right:
            mid = (left + right) // 2
            row, col = divmod(mid, n)  # same as row = mid // n, col = mid % n
            mid_val = matrix[row][col]
            
            if mid_val == target:
                return True
            elif mid_val < target:
                left = mid + 1
            else:
                right = mid - 1
        
        return False





Example Walkthrough:

Input:
matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3

Flattened view: [1,3,5,7,10,11,16,20,23,30,34,60]

Binary search finds 3 → ✅ returns True.
